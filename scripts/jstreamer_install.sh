#!/bin/bash
set -e
cd "$(dirname "$0")"

export LC_ALL=C.UTF-8
export LANG=C.UTF-8

if [ "$EUID" -ne 0 ]; then
  echo "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø—É—Å–∫–∞–π—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å sudo."
  exit 1
fi

REPO_URL="https://github.com/OnisOris/pion_camera"
REPO_NAME="pion_camera"

REAL_USER=$(logname)
REAL_HOME=$(eval echo "~$REAL_USER")
REAL_PATH="$REAL_HOME/.local/bin:$PATH"

INSTALL_DIR="$REAL_HOME/$REPO_NAME"
VENV_DIR="$INSTALL_DIR/.venv"
UV_BIN="$REAL_HOME/.local/bin/uv"

JSTREAMER_RUN="/usr/local/bin/jstreamer-run.sh"
CAMERA_RUN="/usr/local/bin/pion-camera-run.sh"

# --- –§—É–Ω–∫—Ü–∏–∏ ---
install_pkg() {
  local pkg="$1"
  if dpkg -s "$pkg" &>/dev/null; then
    echo "‚úÖ $pkg —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω."
  else
    echo "üîß –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º $pkg..."
    apt-get update -y
    apt-get install -y "$pkg"
  fi
}

echo "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: $REAL_USER"
echo "–î–æ–º–∞—à–Ω—è—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $REAL_HOME"

# --- –ë–∞–∑–æ–≤—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ ---
install_pkg curl
install_pkg git
install_pkg python3-dev

# --- GStreamer (jstreamer) ---
GST_PKGS=(
  libgstreamer1.0-dev
  libgstreamer-plugins-base1.0-dev
  libgstreamer-plugins-bad1.0-dev
  gstreamer1.0-plugins-base
  gstreamer1.0-plugins-good
  gstreamer1.0-plugins-bad
  gstreamer1.0-plugins-ugly
  gstreamer1.0-libav
  gstreamer1.0-tools
  gstreamer1.0-x
  gstreamer1.0-alsa
  gstreamer1.0-gl
  gstreamer1.0-gtk3
  gstreamer1.0-qt5
  gstreamer1.0-pulseaudio
  # –î–ª—è RTSP-—Å–µ—Ä–≤–µ—Ä–∞ –∏ GI –±–∏–Ω–¥–∏–Ω–≥–æ–≤:
  python3-gi
  gir1.2-gstreamer-1.0
  gir1.2-gst-rtsp-server-1.0
  gir1.2-glib-2.0
  libgirepository1.0-dev
  libgstrtspserver-1.0-0
)

echo "üîé –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ jstreamer (gst-launch-1.0)..."
if sudo -u "$REAL_USER" env PATH="$REAL_PATH" bash -c 'command -v gst-launch-1.0 &>/dev/null'; then
  echo "‚úÖ gst-launch-1.0 –Ω–∞–π–¥–µ–Ω ‚Äî GStreamer —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω."
else
  echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–∞–∫–µ—Ç—ã GStreamer (jstreamer)..."
  apt-get update -y
  apt-get install -y "${GST_PKGS[@]}"
fi

# –î–∞–∂–µ –µ—Å–ª–∏ gst-launch —É–∂–µ –µ—Å—Ç—å ‚Äî –¥–æ—Ç–∞—â–∏–º GI/GIR –ø–∞–∫–µ—Ç—ã –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π
apt-get install -y "${GST_PKGS[@]}"

# –î–æ–±–∞–≤–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø—É video (–¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ /dev/video0)
if getent group video >/dev/null; then
  if id -nG "$REAL_USER" | grep -qw video; then
    echo "‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å $REAL_USER —É–∂–µ –≤ –≥—Ä—É–ø–ø–µ video."
  else
    echo "üë§ –î–æ–±–∞–≤–ª—è–µ–º $REAL_USER –≤ –≥—Ä—É–ø–ø—É video..."
    usermod -aG video "$REAL_USER"
  fi
fi

# --- –£—Å—Ç–∞–Ω–æ–≤–∫–∞ uv (–ø–æ–¥ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è) ---
if sudo -u "$REAL_USER" env PATH="$REAL_PATH" bash -c 'command -v uv &>/dev/null'; then
  echo "‚úÖ uv —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω."
else
  echo "üîß –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é uv..."
  sudo -u "$REAL_USER" bash -c 'curl -LsSf https://astral.sh/uv/install.sh | sh'
fi

# --- –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ/–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è ---
echo "üîí –î–æ–±–∞–≤–ª—è–µ–º $INSTALL_DIR –≤ –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ Git..."
sudo -u "$REAL_USER" git config --global --add safe.directory "$INSTALL_DIR" || true

if [ -d "$INSTALL_DIR/.git" ]; then
  echo "üîÑ –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π..."
  cd "$INSTALL_DIR"
  sudo -u "$REAL_USER" git reset --hard
  sudo -u "$REAL_USER" git clean -fd
  sudo -u "$REAL_USER" git checkout main || sudo -u "$REAL_USER" git checkout -B main
  sudo -u "$REAL_USER" git pull --rebase
  chown -R "$REAL_USER:$REAL_USER" "$INSTALL_DIR"
  cd -
else
  echo "‚è¨ –ö–ª–æ–Ω–∏—Ä—É–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π..."
  sudo -u "$REAL_USER" git clone "$REPO_URL" "$INSTALL_DIR"
  chown -R "$REAL_USER:$REAL_USER" "$INSTALL_DIR"
fi

# --- –°–æ–∑–¥–∞–Ω–∏–µ venv –Ω–∞ —Å–∏—Å—Ç–µ–º–Ω–æ–º Python + –¥–æ—Å—Ç—É–ø –∫ —Å–∏—Å—Ç–µ–º–Ω—ã–º –ø–∞–∫–µ—Ç–∞–º (gi) ---
if [ -d "$VENV_DIR" ]; then
  echo "üóëÔ∏è –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ..."
  rm -rf "$VENV_DIR"
fi

mkdir -p "$VENV_DIR"
chown -R "$REAL_USER:$REAL_USER" "$VENV_DIR"

SYS_PY=$(python3 -c 'import sys; print(f"{sys.version_info[0]}.{sys.version_info[1]}")')
echo "üêç –°–æ–∑–¥–∞—ë–º uv venv (Python $SYS_PY, —Å system-site-packages)..."
sudo -u "$REAL_USER" env PATH="$REAL_PATH" bash -c "\"$UV_BIN\" venv --python $SYS_PY --system-site-packages \"$VENV_DIR\""

# --- –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ –≤ venv ---
echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º pion_camera –≤ venv (editable)..."
sudo -u "$REAL_USER" env PATH="$REAL_PATH" bash -c "source \"$VENV_DIR/bin/activate\" && \"$UV_BIN\" pip install -U pip setuptools wheel && \"$UV_BIN\" pip install -e \"$INSTALL_DIR\""

# --- –ë—ã—Å—Ç—Ä—ã–π sanity-check –Ω–∞ gi/GStreamer ---
sudo -u "$REAL_USER" env PATH="$REAL_PATH" bash -c "source \"$VENV_DIR/bin/activate\" && python - <<'PY'
import gi
gi.require_version('Gst', '1.0')
gi.require_version('GstRtspServer', '1.0')
from gi.repository import Gst, GstRtspServer
Gst.init(None)
print('GI/GStreamer OK:', Gst.version())
PY
"

# --- –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ jstreamer ---
echo "üìù –°–æ–∑–¥–∞—ë–º —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ jstreamer: $JSTREAMER_RUN"
cat > "$JSTREAMER_RUN" << 'EOF'
#!/bin/bash
set -e
exec gst-launch-1.0 udpsrc port=9000 caps=application/x-rtp ! queue ! rtph264depay ! h264parse ! avdec_h264 ! videoconvert ! queue ! autovideosink sync=false
EOF
chmod +x "$JSTREAMER_RUN"

# --- –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ Python-—Å–µ—Ä–≤–µ—Ä–∞ ---
echo "üìù –°–æ–∑–¥–∞—ë–º —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –∫–∞–º–µ—Ä—ã: $CAMERA_RUN"
cat > "$CAMERA_RUN" << EOF
#!/bin/bash
set -e
cd "$INSTALL_DIR"
exec "$VENV_DIR/bin/start_server_radxa"
EOF
chmod +x "$CAMERA_RUN"

# --- systemd unit: jstreamer.service ---
echo "‚öôÔ∏è –°–æ–∑–¥–∞—ë–º systemd unit /etc/systemd/system/jstreamer.service..."
cat > /etc/systemd/system/jstreamer.service << EOF
[Unit]
Description=JStreamer (GStreamer UDP H264 viewer)
After=network-online.target
Wants=network-online.target

[Service]
Type=simple
ExecStart=$JSTREAMER_RUN
Restart=always
RestartSec=3
User=$REAL_USER
StandardOutput=journal
StandardError=journal
WorkingDirectory=$REAL_HOME

[Install]
WantedBy=multi-user.target
EOF

# --- systemd unit: pion-camera.service ---
echo "‚öôÔ∏è –°–æ–∑–¥–∞—ë–º systemd unit /etc/systemd/system/pion-camera.service..."
cat > /etc/systemd/system/pion-camera.service << EOF
[Unit]
Description=Pion Camera Python Server
After=network-online.target
Wants=network-online.target
ConditionPathExists=/dev/video0

[Service]
Type=simple
ExecStart=$CAMERA_RUN
Restart=always
RestartSec=3
User=$REAL_USER
StandardOutput=journal
StandardError=journal
WorkingDirectory=$INSTALL_DIR
Environment=PATH=$VENV_DIR/bin:$REAL_PATH

[Install]
WantedBy=multi-user.target
EOF

# --- –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ systemd –∏ –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤ ---
echo "üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º systemd –∏ –∑–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã..."
systemctl daemon-reload
systemctl enable jstreamer.service
systemctl enable pion-camera.service
systemctl restart jstreamer.service
systemctl restart pion-camera.service

echo "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞."
echo "‚ÑπÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞:"
echo "   systemctl status jstreamer.service"
echo "   systemctl status pion-camera.service"
